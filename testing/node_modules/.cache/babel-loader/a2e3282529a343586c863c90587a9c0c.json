{"ast":null,"code":"var _jsxFileName = \"/Users/eduardoferroni/Documents/Pessoal/projects/Advanced-React-Redux/testing/src/Root.js\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"reducers\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport reduxPromise from \"redux-promise\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Root = _ref => {\n  let {\n    children,\n    preloadedState = {}\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: configureStore({\n      reducer: reducers,\n      preloadedState,\n      middleware: [reduxPromise]\n    }),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Root;\nexport default Root;\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","Provider","reducers","configureStore","reduxPromise","Root","children","preloadedState","reducer","middleware"],"sources":["/Users/eduardoferroni/Documents/Pessoal/projects/Advanced-React-Redux/testing/src/Root.js"],"sourcesContent":["import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport reducers from \"reducers\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport reduxPromise from \"redux-promise\";\n\nconst Root = ({ children, preloadedState = {} }) => {\n  return (\n    <Provider\n      store={configureStore({\n        reducer: reducers,\n        preloadedState,\n        middleware: [reduxPromise],\n      })}\n    >\n      {children}\n    </Provider>\n  );\n};\n\nexport default Root;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,YAAP,MAAyB,eAAzB;;;AAEA,MAAMC,IAAI,GAAG,QAAuC;EAAA,IAAtC;IAAEC,QAAF;IAAYC,cAAc,GAAG;EAA7B,CAAsC;EAClD,oBACE,QAAC,QAAD;IACE,KAAK,EAAEJ,cAAc,CAAC;MACpBK,OAAO,EAAEN,QADW;MAEpBK,cAFoB;MAGpBE,UAAU,EAAE,CAACL,YAAD;IAHQ,CAAD,CADvB;IAAA,UAOGE;EAPH;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAZD;;KAAMD,I;AAcN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}